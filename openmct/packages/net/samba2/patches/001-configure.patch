diff -Naru samba-2.2.12/source/configure samba-2.2.12-mct/source/configure
--- samba-2.2.12/source/configure	2004-08-12 20:24:19.000000000 +0200
+++ samba-2.2.12-mct/source/configure	2006-02-28 09:55:38.000000000 +0100
@@ -1719,7 +1719,7 @@
 fi
 
         CPPFLAGS="$old_CPPFLAGS"
-        if test x$LINUX_LFS_SUPPORT = xyes ; then
+        if test x$LINUX_LFS_SUPPORT = xyes ||  test x$LINUX_LFS_SUPPORT = xcross ; then
           CPPFLAGS="-D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE $CPPFLAGS"
           cat >> confdefs.h <<\EOF
 #define _LARGEFILE64_SOURCE 1
@@ -9663,45 +9663,10 @@
 
 fi
 
-echo $ac_n "checking if gettimeofday takes tz argument""... $ac_c" 1>&6
-echo "configure:9668: checking if gettimeofday takes tz argument" >&5
-if eval "test \"`echo '$''{'samba_cv_HAVE_GETTIMEOFDAY_TZ'+set}'`\" = set"; then
-  echo $ac_n "(cached) $ac_c" 1>&6
-else
-  
-if test "$cross_compiling" = yes; then
-  samba_cv_HAVE_GETTIMEOFDAY_TZ=cross
-else
-  cat > conftest.$ac_ext <<EOF
-#line 9677 "configure"
-#include "confdefs.h"
-
-#include <sys/time.h>
-#include <unistd.h>
-main() { struct timeval tv; exit(gettimeofday(&tv, NULL));}
-EOF
-if { (eval echo configure:9684: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null
-then
-  samba_cv_HAVE_GETTIMEOFDAY_TZ=yes
-else
-  echo "configure: failed program was:" >&5
-  cat conftest.$ac_ext >&5
-  rm -fr conftest*
-  samba_cv_HAVE_GETTIMEOFDAY_TZ=no
-fi
-rm -fr conftest*
-fi
-
-fi
-
-echo "$ac_t""$samba_cv_HAVE_GETTIMEOFDAY_TZ" 1>&6
-if test x"$samba_cv_HAVE_GETTIMEOFDAY_TZ" = x"yes"; then
-    cat >> confdefs.h <<\EOF
+cat >> confdefs.h <<\EOF
 #define HAVE_GETTIMEOFDAY_TZ 1
 EOF
 
-fi
-
 echo $ac_n "checking for __va_copy""... $ac_c" 1>&6
 echo "configure:9707: checking for __va_copy" >&5
 if eval "test \"`echo '$''{'samba_cv_HAVE_VA_COPY'+set}'`\" = set"; then
@@ -13137,50 +13102,10 @@
   fi
 fi
 
-#
-# As a gating factor for large file support, in order to
-# use <4GB files we must have the following minimal support
-# available.
-# long long, and a 64 bit off_t or off64_t.
-# If we don't have all of these then disable large
-# file support.
-#
-echo $ac_n "checking if large file support can be enabled""... $ac_c" 1>&6
-echo "configure:13150: checking if large file support can be enabled" >&5
-cat > conftest.$ac_ext <<EOF
-#line 13152 "configure"
-#include "confdefs.h"
-
-#if defined(HAVE_LONGLONG) && (defined(HAVE_OFF64_T) || (defined(SIZEOF_OFF_T) && (SIZEOF_OFF_T == 8)))
-#include <sys/types.h>
-#else
-__COMPILE_ERROR_
-#endif
-
-int main() {
-int i
-; return 0; }
-EOF
-if { (eval echo configure:13165: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
-  rm -rf conftest*
-  samba_cv_HAVE_EXPLICIT_LARGEFILE_SUPPORT=yes
-else
-  echo "configure: failed program was:" >&5
-  cat conftest.$ac_ext >&5
-  rm -rf conftest*
-  samba_cv_HAVE_EXPLICIT_LARGEFILE_SUPPORT=no
-fi
-rm -f conftest*
-if test x"$samba_cv_HAVE_EXPLICIT_LARGEFILE_SUPPORT" = x"yes"; then
-    echo "$ac_t""yes" 1>&6
-    cat >> confdefs.h <<\EOF
+cat >> confdefs.h <<\EOF
 #define HAVE_EXPLICIT_LARGEFILE_SUPPORT 1
 EOF
 
-else
-    echo "$ac_t""no" 1>&6
-fi
-
 # Check whether --with-spinlocks or --without-spinlocks was given.
 if test "${with_spinlocks+set}" = set; then
   withval="$with_spinlocks"
diff -Naru samba-2.2.12/source/include/includes.h samba-2.2.12-mct/source/include/includes.h
--- samba-2.2.12/source/include/includes.h	2004-08-12 20:24:29.000000000 +0200
+++ samba-2.2.12-mct/source/include/includes.h	2006-02-28 09:44:39.000000000 +0100
@@ -533,7 +533,7 @@
  */
 
 #ifndef LARGE_SMB_OFF_T
-#  if (defined(HAVE_EXPLICIT_LARGEFILE_SUPPORT) && defined(HAVE_OFF64_T)) || (defined(SIZEOF_OFF_T) && (SIZEOF_OFF_T == 8))
+#  if defined(HAVE_EXPLICIT_LARGEFILE_SUPPORT) 
 #    define LARGE_SMB_OFF_T 1
 #  endif
 #endif
diff -Naru samba-2.2.12/source/nsswitch/winbindd_nss.h samba-2.2.12-mct/source/nsswitch/winbindd_nss.h
--- samba-2.2.12/source/nsswitch/winbindd_nss.h	2004-08-12 20:24:23.000000000 +0200
+++ samba-2.2.12-mct/source/nsswitch/winbindd_nss.h	2006-02-28 01:20:08.000000000 +0100
@@ -107,7 +107,7 @@
 /* Winbind request structure */
 
 struct winbindd_request {
-	uint32 length;
+	unsigned int length;
 	enum winbindd_cmd cmd;   /* Winbindd command to execute */
 	pid_t pid;               /* pid of calling process */
 
@@ -143,7 +143,7 @@
 			fstring dom_name;       /* lookupname */
 			fstring name;       
 		} name;
-		uint32 num_entries;  /* getpwent, getgrent */
+		unsigned int num_entries;  /* getpwent, getgrent */
 	} data;
 	fstring domain;      /* {set,get,end}{pw,gr}ent() */
 };
@@ -161,7 +161,7 @@
     
 	/* Header information */
 
-	uint32 length;                        /* Length of response */
+	unsigned int length;                        /* Length of response */
 	enum winbindd_result result;          /* Result code */
 
 	/* Fixed length return data */
@@ -193,7 +193,7 @@
 			int gr_mem_ofs;   /* offset to group membership */
 		} gr;
 
-		uint32 num_entries; /* getpwent, getgrent */
+		unsigned int num_entries; /* getpwent, getgrent */
 		struct winbindd_sid {
 			fstring sid;        /* lookupname, [ug]id_to_sid */
 			int type;
@@ -212,14 +212,14 @@
 		fstring domain_name;
 
 		struct auth_reply {
-			uint32 nt_status;
+			unsigned int nt_status;
 			fstring nt_status_string;
 			fstring error_string;
 			int pam_error;
 		} auth;
 	} data;
 
-	uint32 nt_status;	/* Extended error information */
+	unsigned int nt_status;	/* Extended error information */
 
 	/* Variable length return data */
 
