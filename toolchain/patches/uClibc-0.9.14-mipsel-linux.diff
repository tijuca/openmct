diff -Naru uClibc-0.9.14.orig/Config uClibc-0.9.14/Config
--- uClibc-0.9.14.orig/Config	1970-01-01 01:00:00.000000000 +0100
+++ uClibc-0.9.14/Config	2005-06-16 16:59:49.000000000 +0200
@@ -0,0 +1,196 @@
+# Library Configuration rules for uClibc
+#
+# This file contains rules which are shared between multiple Makefiles.  All
+# normal configuration options live in the file named "Config".  You probably
+# should not mess with this file unless you know what you are doing...  
+# 
+# Copyright (C) 2000 by Lineo, inc.
+# Copyright (C) 2000,2001 Erik Andersen <andersee@debian.org>
+#
+# This program is free software; you can redistribute it and/or modify it under
+# the terms of the GNU Library General Public License as published by the Free
+# Software Foundation; either version 2 of the License, or (at your option) any
+# later version.
+#
+# This program is distributed in the hope that it will be useful, but WITHOUT
+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+# FOR A PARTICULAR PURPOSE. See the GNU Library General Public License for more
+# details.
+#
+# You should have received a copy of the GNU Library General Public License
+# along with this program; if not, write to the Free Software Foundation, Inc.,
+# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+#
+# Derived in part from the Linux-8086 C library, the GNU C Library, and several
+# other sundry sources.  Files within this library are copyright by their
+# respective copyright holders.
+
+NATIVE_CC = gcc
+
+# Specify the target
+TARGET_ARCH=mipsel
+
+# If you are running a cross compiler, you may want to set this
+# to something more interesting...  Target architecture is determined
+# by asking this compiler what arch it compiles stuff for.
+CROSS = mipsel-linux-
+CC = $(CROSS)gcc
+AR = $(CROSS)ar
+LD = $(CROSS)ld
+NM = $(CROSS)nm
+STRIPTOOL = $(CROSS)strip
+#STRIPTOOL = /bin/true
+
+# Set the following to `true' to make a debuggable build, and `false' for
+# production builds.
+DODEBUG = false
+
+# Compiler warnings you want to see 
+WARNINGS = -Wall
+
+# Note that the kernel source you use to compile with should be the same as the
+# Linux kernel you run your apps on.  uClibc doesn't even try to achieve binary
+# compatibility across kernel versions.  So don't expect, for example, uClibc
+# compiled with Linux kernel 2.0.x to implement lchown properly, since 2.0.x
+# can't do that. Similarly, if you compile uClibc vs Linux 2.4.x kernel headers,
+# but then run on Linux 2.0.x, lchown will be compiled into uClibc, but won't
+# work at all.  You have been warned.
+KERNEL_SOURCE = /home/andi/image/mips/linux
+
+# Set this to `false' if your CPU doesn't have a memory management unit (MMU).
+# Set it to `true' otherwise.
+HAS_MMU = true
+
+# Set this to `false' if you don't have/need basic floating point support
+# support in libc (strtod, printf, scanf).  Set it to `true' otherwise.
+# If this is not true, then libm will not be built.
+HAS_FLOATING_POINT = true
+
+# Set to `true' if you want the math library to contain the full set
+# of C99 math library features.  Costs an extra 35k or so on x86. 
+DO_C99_MATH = false
+
+# Set this to `false' if you don't have/need "(unsigned) long long int" support.
+# Set it to `true' otherwise.
+# Affects *printf and *scanf functions.
+# Also omits strto(u)ll, and (u)lltostr from the library if `false'.
+HAS_LONG_LONG = true
+
+# Set this to 'false if you don't need shadow password support.
+HAS_SHADOW = true
+
+# Set this to `false' if you don't have/need locale support; `true' otherwise.
+# NOTE: Currently does not affect collation.
+# You must also generate the locale data and associated .h file.
+# See the README in directory extra/locale for details.
+HAS_LOCALE = false
+
+# Set this to `false' if you don't have/need wide char support.
+HAS_WCHAR = false
+
+# This specifies which malloc implementation is used.
+#
+# "malloc" use mmap for all allocations and so works very well on MMU-less
+# systems that do not support the brk() system call.   It is pretty smart 
+# about reusing already allocated memory, and minimizing memory wastage.
+#
+# "malloc-930716" is derived from libc-5.3.12 and uses the brk() system call
+# for all memory allocations.  This makes it very fast.  It is also pretty
+# smart about reusing already allocated memory, and minimizing memory wastage.
+# Because this uses brk() it will not work on uClinux MMU-less systems.
+#MALLOC = malloc 
+MALLOC = malloc-930716
+
+# If you want large file support (greater then 2 GiB) turn this on.
+# Do not enable this unless your kernel provides large file support.
+DOLFS = true
+
+# Posix regular expression code is really big -- 27k all by itself.
+# If you don't use regular expressions, turn this off and save space.
+# Of course, if you only staticly link, leave this on, since it will
+# only be included in your apps if you use regular expressions. 
+INCLUDE_REGEX = true
+
+# If you want to include RPC support, enable this.  RPC is almost never used 
+# for anything except NFS support, so unless you plan to use NFS, leave this
+# disabled.  This is off by default.
+INCLUDE_RPC = true
+
+# Normally we enable just enough RPC support for things like rshd and 
+# nfs mount to work.  If you find you need the rest of the RPC stuff, 
+# then enable this.
+INCLUDE_FULL_RPC = true
+
+# If you want to include support for the next version of the Internet
+# Protocol: IP version 6, enable this.  This is off by default.
+INCLUDE_IPV6 = false
+
+# If you want to include threads support, enable this.  The C library will
+# be compiled thread-safe, and the libpthread library will be built.
+INCLUDE_THREADS = true
+
+# If you want to support only Unix 98 PTYs enable this.  Some older
+# applications may need this disabled.  For most current programs, 
+# you can generally leave this true.
+UNIX98PTY_ONLY = true
+
+# Enable this if /dev/pts is on a devpts or devfs file system.  Both
+# these filesystems automatically manage permissions on the /dev/pts 
+# devices.  You may need to mount this fs on /dev/pts for this to work. 
+# This is true by default.
+ASSUME_DEVPTS = true
+
+# If you want to compile the library as PIC code, turn this on.
+# This is automagically enabled when HAVE_SHARED is true
+DOPIC = false
+
+# Enable support for shared libraries?  If this is false, you can
+# ignore all the rest of the options in this file...
+HAVE_SHARED = true
+
+# uClibc has a native shared library loader for some architectures.
+BUILD_UCLIBC_LDSO = true
+
+# If you are using shared libraries, but do not want/have a native
+# uClibc shared library loader, please specify the name of your
+# system's shared library loader here...
+#SYSTEM_LDSO = /lib/ld-linux.so.2
+
+# When using shared libraries, this path is the location where the
+# shared library will be invoked.  This value will be compiled into
+# every binary compiled with uClibc.  
+#
+# BIG FAT WARNING:  
+# If you do not have a shared library loader with the correct name
+# sitting in the directory this points to, your binaries will not run.
+SHARED_LIB_LOADER_PATH = /lib
+
+# DEVEL_PREFIX is the directory into which the uClibc development
+# environment will be installed.   The result will look something 
+# like the following:
+#   DEVEL_PREFIX/
+#	lib/            <contains all runtime and static libs>
+#	include/        <Where all the header files go>
+# This value is used by the 'make install' Makefile target.  Since this
+# directory is compiled into the uclibc cross compiler spoofer, you
+# have to recompile if you change this value...
+DEVEL_PREFIX = /usr/local/$(TARGET_ARCH)-linux-uclibc
+
+# SYSTEM_DEVEL_PREFIX is the directory prefix used when installing
+# bin/arch-uclibc-gcc, bin/arch-uclibc-ld, etc.   This is only used by
+# the 'make install' target, and is not compiled into anything.  This
+# defaults to $DEVEL_PREFIX/usr, but makers of .rpms and .debs will
+# want to set this to "/usr" instead.
+SYSTEM_DEVEL_PREFIX = $(DEVEL_PREFIX)
+
+# DEVEL_TOOL_PREFIX is the directory prefix used when installing
+# bin/gcc, bin/ld, etc.   This is only used by the 'make install'
+# target, and is not compiled into anything.  This defaults to
+# $DEVEL_PREFIX/usr, but makers of .rpms and .debs may want to
+# set this to something else.
+DEVEL_TOOL_PREFIX = $(DEVEL_PREFIX)/usr
+
+# If you want 'make install' to install everything under a temporary
+# directory, the define PREFIX during the install step,
+# i.e., 'make PREFIX=/var/tmp/uClibc install'.
+#PREFIX = $(TOPDIR)/_install
diff -Naru uClibc-0.9.14.orig/extra/scripts/get-needed-libgcc-objects.sh uClibc-0.9.14/extra/scripts/get-needed-libgcc-objects.sh
--- uClibc-0.9.14.orig/extra/scripts/get-needed-libgcc-objects.sh	2002-08-07 21:56:08.000000000 +0200
+++ uClibc-0.9.14/extra/scripts/get-needed-libgcc-objects.sh	2005-06-16 16:41:53.000000000 +0200
@@ -19,7 +19,7 @@
 rm -f libc.ldr
 $LD -r -o libc.ldr ../../lib/crt0.o ../../lib/crti.o ../../lib/crtn.o --whole-archive ../libc.a
 
-if $NM --undefined-only libc.ldr | grep -v "^main$" | grep -v "^_GLOBAL_OFFSET_TABLE_$" | grep -v "_gp_disp" > sym.need ; then
+if $NM --undefined-only libc.ldr | grep -v "main$" | grep -v "^_GLOBAL_OFFSET_TABLE_$" | grep -v "_gp_disp" > sym.need ; then
     EXIT_WITH_ERROR=0
     rm -f obj.need
     touch obj.need
diff -Naru uClibc-0.9.14.orig/extra/scripts/initfini.pl uClibc-0.9.14/extra/scripts/initfini.pl
--- uClibc-0.9.14.orig/extra/scripts/initfini.pl	2002-05-20 20:35:42.000000000 +0200
+++ uClibc-0.9.14/extra/scripts/initfini.pl	2005-06-16 16:50:07.000000000 +0200
@@ -83,7 +83,12 @@
 	$omitcrtn = 0;
 	next;
     }
-    if (/^_init:/ || /^_fini:/) {
+    if (/^_init:/) {
+	print CRTN ".ent _init\n";
+	$omitcrtn = 1;
+    }
+    if (/^_fini:/) {
+	print CRTN ".ent _fini\n";
 	$omitcrtn = 1;
     }
     if (/PROLOG_PAUSES/) {
diff -Naru uClibc-0.9.14.orig/include/pthread.h uClibc-0.9.14/include/pthread.h
--- uClibc-0.9.14.orig/include/pthread.h	2002-07-01 18:58:28.000000000 +0200
+++ uClibc-0.9.14/include/pthread.h	2005-06-16 16:41:53.000000000 +0200
@@ -160,7 +160,7 @@
 /* Create a thread with given attributes ATTR (or default attributes
    if ATTR is NULL), and call function START_ROUTINE with given
    arguments ARG.  */
-extern int pthread_create (pthread_t *__restrict __thread,
+extern int pthread_create (pthread_t *__restrict __thread_param,
 			   __const pthread_attr_t *__restrict __attr,
 			   void *(*__start_routine) (void *),
 			   void *__restrict __arg) __THROW;
@@ -169,7 +169,7 @@
 extern pthread_t pthread_self (void) __THROW;
 
 /* Compare two thread identifiers.  */
-extern int pthread_equal (pthread_t __thread1, pthread_t __thread2) __THROW;
+extern int pthread_equal (pthread_t __thread_param1, pthread_t __thread2) __THROW;
 
 /* Terminate calling thread.  */
 extern void pthread_exit (void *__retval)
@@ -178,7 +178,7 @@
 /* Make calling thread wait for termination of the thread TH.  The
    exit status of the thread is stored in *THREAD_RETURN, if THREAD_RETURN
    is not NULL.  */
-extern int pthread_join (pthread_t __th, void **__thread_return) __THROW;
+extern int pthread_join (pthread_t __th, void **__thread_param_return) __THROW;
 
 /* Indicate that the thread TH is never to be joined with PTHREAD_JOIN.
    The resources of TH will therefore be freed immediately when it
@@ -588,7 +588,7 @@
 extern int pthread_setcanceltype (int __type, int *__oldtype) __THROW;
 
 /* Cancel THREAD immediately or at the next possibility.  */
-extern int pthread_cancel (pthread_t __thread) __THROW;
+extern int pthread_cancel (pthread_t __thread_param) __THROW;
 
 /* Test for pending cancellation for the current thread and terminate
    the thread as per pthread_exit(PTHREAD_CANCELED) if it has been
@@ -646,7 +646,7 @@
 
 #ifdef __USE_XOPEN2K
 /* Get ID of CPU-time clock for thread THREAD_ID.  */
-extern int pthread_getcpuclockid (pthread_t __thread_id,
+extern int pthread_getcpuclockid (pthread_t __thread_param_id,
 				  clockid_t *__clock_id) __THROW;
 #endif
 
diff -Naru uClibc-0.9.14.orig/ldso/ldso/ldso.c uClibc-0.9.14/ldso/ldso/ldso.c
--- uClibc-0.9.14.orig/ldso/ldso/ldso.c	2002-08-08 16:35:29.000000000 +0200
+++ uClibc-0.9.14/ldso/ldso/ldso.c	2005-06-16 16:41:53.000000000 +0200
@@ -304,15 +304,14 @@
 #elif defined(__mips__)
   __asm__("\tmove %0, $28\n\tsubu %0,%0,0x7ff0\n\t":"=r"(got));
 #elif defined(__sh__)
-  __asm__("
-	   mov.l    1f, %0
-	   mova     1f, r0
-	   bra      2f
-	   add r0,  %0
-	   .balign  4
-1:	   .long    _GLOBAL_OFFSET_TABLE_
-2:
-"  : "=r" (got) : : "r0");
+  __asm__("\tmov.l    1f, %0\n\t"
+	      "mova     1f, r0\n\t"
+          "bra      2f\n\t"
+       	  "add r0,  %0\n\t"
+	      ".balign  4\n\t"
+"1:	   .long    _GLOBAL_OFFSET_TABLE_\n\t"
+"2:\n\t"
+  : "=r" (got) : : "r0");
 #else
 	/* Do things the slow way in C */
 	{
diff -Naru uClibc-0.9.14.orig/ldso/ldso/mips/boot1_arch.h uClibc-0.9.14/ldso/ldso/mips/boot1_arch.h
--- uClibc-0.9.14.orig/ldso/ldso/mips/boot1_arch.h	2002-08-08 16:35:39.000000000 +0200
+++ uClibc-0.9.14/ldso/ldso/mips/boot1_arch.h	2005-06-16 16:41:53.000000000 +0200
@@ -3,36 +3,35 @@
  * needed for this architecture.
  */
 
-asm("
-	.text
-	.globl _dl_boot
-_dl_boot:
-	.set noreorder
-	bltzal $0, 0f
-	nop
-0:	.cpload $31
-	.set reorder
-	la $4, _DYNAMIC
-	sw $4, -0x7ff0($28)
-	move $4, $29
-	la $8, coff
-	.set noreorder
-	bltzal $0, coff
-	nop
-coff:	subu $8, $31, $8
-	.set reorder
-	la $25, _dl_boot2
-	addu $25, $8
-	jalr $25
-	lw $4, 0($29)
-	la $5, 4($29)
-	sll $6, $4, 2
-	addu $6, $6, $5
-	addu $6, $6, 4
-	la $7, _dl_elf_main
-	lw $25, 0($7)
-	jr $25
-");
+__asm__("\t.text\n\t"
+"	.globl _dl_boot\n\t"
+"_dl_boot:\n\t"
+"	.set noreorder\n\t"
+"	bltzal $0, 0f\n\t"
+"	nop\n\t"
+"0:	.cpload $31\n\t"
+"	.set reorder\n\t"
+"	la $4, _DYNAMIC\n\t"
+"	sw $4, -0x7ff0($28)\n\t"
+"	move $4, $29\n\t"
+"	la $8, coff\n\t"
+"	.set noreorder\n\t"
+"	bltzal $0, coff\n\t"
+"	nop\n\t"
+"coff:	subu $8, $31, $8\n\t"
+"	.set reorder\n\t"
+"	la $25, _dl_boot2\n\t"
+"	addu $25, $8\n\t"
+"	jalr $25\n\t"
+"	lw $4, 0($29)\n\t"
+"	la $5, 4($29)\n\t"
+"	sll $6, $4, 2\n\t"
+"	addu $6, $6, $5\n\t"
+"	addu $6, $6, 4\n\t"
+"	la $7, _dl_elf_main\n\t"
+"	lw $25, 0($7)\n\t"
+"	jr $25\n\t"
+);
 
 #define _dl_boot _dl_boot2
 #define LD_BOOT(X)   static void __attribute__ ((unused)) _dl_boot (X)
diff -Naru uClibc-0.9.14.orig/libc/stdlib/stdlib.c uClibc-0.9.14/libc/stdlib/stdlib.c
--- uClibc-0.9.14.orig/libc/stdlib/stdlib.c	2002-08-12 06:32:38.000000000 +0200
+++ uClibc-0.9.14/libc/stdlib/stdlib.c	2005-06-16 16:55:41.000000000 +0200
@@ -102,11 +102,11 @@
 #endif
 
 #if defined(ULLONG_MAX) && (ULLONG_MAX == ULONG_MAX)
-strong_alias(labs,llabs)
+// strong_alias(labs,llabs)
 #endif
 
 #if ULONG_MAX == UINTMAX_MAX
-strong_alias(labs,imaxabs)
+extern intmax_t imaxabs (intmax_t __n) __THROW __attribute__ ((__const__));
 #endif
 
 long int labs(long int j)
@@ -120,10 +120,6 @@
 
 #if defined(ULLONG_MAX) && (LLONG_MAX > LONG_MAX)
 
-#if (ULLONG_MAX == UINTMAX_MAX)
-strong_alias(llabs,imaxabs)
-#endif
-
 long long int llabs(long long int j)
 {
 	return (j >= 0) ? j : -j;
@@ -131,6 +127,10 @@
 
 #endif /* defined(ULLONG_MAX) && (LLONG_MAX > LONG_MAX) */
 
+#if (ULLONG_MAX == UINTMAX_MAX)
+// strong_alias(llabs,imaxabs)
+#endif
+
 #endif
 /**********************************************************************/
 #ifdef L_atoi
@@ -153,7 +153,7 @@
 #endif
 
 #if defined(ULLONG_MAX) && (ULLONG_MAX == ULONG_MAX)
-strong_alias(atol,atoll)
+// strong_alias(atol,atoll)
 #endif
 
 long atol(const char *nptr)
@@ -179,11 +179,12 @@
 #ifdef L_strtol
 
 #if ULONG_MAX == UINTMAX_MAX
-strong_alias(strtol,strtoimax)
+intmax_t strtoimax (__const char *__restrict __nptr,
+                    char **__restrict __endptr, int __base) __THROW;
 #endif
 
 #if defined(ULLONG_MAX) && (ULLONG_MAX == ULONG_MAX)
-strong_alias(strtol,strtoll)
+// strong_alias(strtol,strtoll)
 #endif
 
 long strtol(const char * __restrict str, char ** __restrict endptr, int base)
@@ -197,10 +198,6 @@
 
 #if defined(ULLONG_MAX) && (LLONG_MAX > LONG_MAX)
 
-#if (ULLONG_MAX == UINTMAX_MAX)
-strong_alias(strtoll,strtoimax)
-#endif
-
 long long strtoll(const char * __restrict str,
 				  char ** __restrict endptr, int base)
 {
@@ -209,16 +206,21 @@
 
 #endif /* defined(ULLONG_MAX) && (LLONG_MAX > LONG_MAX) */
 
+#if (ULLONG_MAX == UINTMAX_MAX)
+// strong_alias(strtoll,strtoimax)
+#endif
+
 #endif
 /**********************************************************************/
 #ifdef L_strtoul
 
 #if ULONG_MAX == UINTMAX_MAX
-strong_alias(strtoul,strtoumax)
+extern uintmax_t strtoumax (__const char *__restrict __nptr,
+                            char ** __restrict __endptr, int __base) __THROW;
 #endif
 
 #if defined(ULLONG_MAX) && (ULLONG_MAX == ULONG_MAX)
-strong_alias(strtoul,strtoull)
+// strong_alias(strtoul,strtoull)
 #endif
 
 unsigned long strtoul(const char * __restrict str,
@@ -234,7 +236,8 @@
 #if defined(ULLONG_MAX) && (LLONG_MAX > LONG_MAX)
 
 #if (ULLONG_MAX == UINTMAX_MAX)
-strong_alias(strtoull,strtoumax)
+extern uintmax_t strtoumax (__const char *__restrict __nptr,
+                            char ** __restrict __endptr, int __base) __THROW;
 #endif
 
 unsigned long long strtoull(const char * __restrict str,
diff -Naru uClibc-0.9.14.orig/libc/sysdeps/linux/common/bits/sigthread.h uClibc-0.9.14/libc/sysdeps/linux/common/bits/sigthread.h
--- uClibc-0.9.14.orig/libc/sysdeps/linux/common/bits/sigthread.h	2002-03-01 21:46:02.000000000 +0100
+++ uClibc-0.9.14/libc/sysdeps/linux/common/bits/sigthread.h	2005-06-16 16:41:53.000000000 +0200
@@ -33,6 +33,6 @@
 			    __sigset_t *__restrict __oldmask)__THROW;
 
 /* Send signal SIGNO to the given thread. */
-extern int pthread_kill (pthread_t __thread, int __signo) __THROW;
+extern int pthread_kill (pthread_t __thread_param, int __signo) __THROW;
 
 #endif	/* bits/sigthread.h */
