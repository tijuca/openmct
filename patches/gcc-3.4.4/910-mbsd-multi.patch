$FreeWRT$

	This patch brings over a few features from MirBSD:
	* -fhonour-copts
	  If this option is not given, it's warned (depending
	  on environment variables). This is to catch errors
	  of misbuilt packages which override CFLAGS themselves.
	* -Werror-maybe-reset
	  Has the effect of -Wno-error if GCC_NO_WERROR is
	  set and not '0', a no-operation otherwise. This is
	  to be able to use -Werror in "make" but prevent
	  GNU autoconf generated configure scripts from
	  freaking out.
	* Make -fno-strict-aliasing and -fno-delete-null-pointer-checks
	  the default for -O2/-Os, because they trigger gcc bugs
	  and can delete code with security implications.

	This patch was authored by Thorsten Glaser <tg@mirbsd.de>
	with copyright assignment to the FSF in effect.

Index: c-opts.c
===================================================================
RCS file: /cvs/gcc/gcc/c-opts.c,v
retrieving revision 1.1.101.1
retrieving revision 1.9
diff -p -u -r1.1.101.1 -r1.9
--- gcc/gcc/c-opts.c	21 Mar 2005 12:04:29 -0000	1.1.101.1
+++ gcc/gcc/c-opts.c	25 Sep 2006 22:01:17 -0000	1.9
@@ -97,6 +99,9 @@ static size_t include_cursor;
 /* Permit Fotran front-end options.  */
 static bool permit_fortran_options;
 
+/* Check if a port honours COPTS.  */
+static int honour_copts = 0;
+
 static void set_Wimplicit (int);
 static void handle_OPT_d (const char *);
 static void set_std_cxx98 (int);
@@ -452,6 +462,14 @@ c_common_handle_option (size_t scode, co
       mesg_implicit_function_declaration = 2;
       break;
 
+    case OPT_Werror_maybe_reset:
+      {
+	char *ev = getenv ("GCC_NO_WERROR");
+	if ((ev != NULL) && (*ev != '0'))
+	  cpp_opts->warnings_are_errors = 0;
+      }
+      break;
+
     case OPT_Wfloat_equal:
       warn_float_equal = value;
       break;
@@ -821,6 +839,12 @@ c_common_handle_option (size_t scode, co
       flag_exceptions = value;
       break;
 
+    case OPT_fhonour_copts:
+      if (c_language == clk_c) {
+	honour_copts++;
+      }
+      break;
+
     case OPT_fimplement_inlines:
       flag_implement_inlines = value;
       break;
@@ -1211,6 +1235,47 @@ c_common_init (void)
   /* Has to wait until now so that cpplib has its hash table.  */
   init_pragma ();
 
+  if (c_language == clk_c) {
+    char *ev = getenv ("GCC_HONOUR_COPTS");
+    int evv;
+    if (ev == NULL)
+      evv = 0;
+    else if ((*ev == '0') || (*ev == '\0'))
+      evv = 0;
+    else if (*ev == '1')
+      evv = 1;
+    else if (*ev == '2')
+      evv = 2;
+    else if (*ev == 's')
+      evv = -1;
+    else {
+      warning ("unknown GCC_HONOUR_COPTS value, assuming 1");
+      evv = 1; /* maybe depend this on something like MIRBSD_NATIVE?  */
+    }
+    if (evv == 1) {
+      if (honour_copts == 0) {
+	error ("someone does not honour COPTS at all in lenient mode");
+	return false;
+      } else if (honour_copts != 1) {
+	warning ("someone does not honour COPTS correctly, passed %d times",
+	 honour_copts);
+      }
+    } else if (evv == 2) {
+      if (honour_copts == 0) {
+	error ("someone does not honour COPTS at all in strict mode");
+	return false;
+      } else if (honour_copts != 1) {
+	error ("someone does not honour COPTS correctly, passed %d times",
+	 honour_copts);
+	return false;
+      }
+    } else if (evv == 0) {
+      if (honour_copts != 1)
+	inform ("someone does not honour COPTS correctly, passed %d times",
+	 honour_copts);
+    }
+  }
+
   return true;
 }
 
Index: c.opt
===================================================================
RCS file: /cvs/gcc/gcc/c.opt,v
retrieving revision 1.1.101.2
retrieving revision 1.6
diff -p -u -r1.1.101.2 -r1.6
--- gcc/gcc/c.opt	26 Mar 2005 00:36:32 -0000	1.1.101.2
+++ gcc/gcc/c.opt	25 Sep 2006 22:01:17 -0000	1.6
@@ -208,6 +215,10 @@ Werror-implicit-function-declaration
 C ObjC RejectNegative
 Make implicit function declarations an error
 
+Werror-maybe-reset
+C ObjC C++ ObjC++
+; Documented in common.opt
+
 Wfloat-equal
 C ObjC C++ ObjC++
 Warn if testing floating point numbers for equality
@@ -518,6 +529,9 @@ C++ ObjC++
 fhonor-std
 C++ ObjC++
 
+fhonour-copts
+C ObjC C++ ObjC++ RejectNegative
+
 fhosted
 C ObjC
 Assume normal C execution environment
Index: common.opt
===================================================================
RCS file: /cvs/gcc/gcc/common.opt,v
retrieving revision 1.1.101.1
retrieving revision 1.6
diff -p -u -r1.1.101.1 -r1.6
--- gcc/gcc/common.opt	21 Mar 2005 12:04:32 -0000	1.1.101.1
+++ gcc/gcc/common.opt	25 Sep 2006 22:01:17 -0000	1.6
@@ -72,6 +75,10 @@ Werror
 Common
 Treat all warnings as errors
 
+Werror-maybe-reset
+Common
+If environment variable GCC_NO_WERROR is set, act as -Wno-error
+
 Wextra
 Common
 Print extra (possibly unwanted) warnings
@@ -373,6 +388,9 @@ fguess-branch-probability
 Common
 Enable guessing of branch probabilities
 
+fhonour-copts
+Common RejectNegative
+
 fident
 Common
 Process #ident directives
Index: opts.c
===================================================================
RCS file: /cvs/gcc/gcc/opts.c,v
retrieving revision 1.1.101.1
retrieving revision 1.8
diff -p -u -r1.1.101.1 -r1.8
--- gcc/gcc/opts.c	21 Mar 2005 12:04:48 -0000	1.1.101.1
+++ gcc/gcc/opts.c	25 Sep 2006 22:01:17 -0000	1.8
@@ -560,8 +569,6 @@ decode_options (unsigned int argc, const
       flag_schedule_insns_after_reload = 1;
 #endif
       flag_regmove = 1;
-      flag_strict_aliasing = 1;
-      flag_delete_null_pointer_checks = 1;
       flag_reorder_blocks = 1;
       flag_reorder_functions = 1;
       flag_unit_at_a_time = 1;
@@ -569,6 +576,9 @@ decode_options (unsigned int argc, const
 
   if (optimize >= 3)
     {
+      flag_strict_aliasing = 1;
+      flag_delete_null_pointer_checks = 1;
+
       flag_inline_functions = 1;
       flag_rename_registers = 1;
       flag_unswitch_loops = 1;
@@ -717,6 +727,14 @@ common_handle_option (size_t scode, cons
       warnings_are_errors = value;
       break;
 
+    case OPT_Werror_maybe_reset:
+      {
+	char *ev = getenv ("GCC_NO_WERROR");
+	if ((ev != NULL) && (*ev != '0'))
+	  warnings_are_errors = 0;
+      }
+      break;
+
     case OPT_Wextra:
       set_Wextra (value);
       break;
@@ -1040,6 +1066,9 @@ common_handle_option (size_t scode, cons
       flag_guess_branch_prob = value;
       break;
 
+    case OPT_fhonour_copts:
+      break;
+
     case OPT_fident:
       flag_no_ident = !value;
       break;
Index: doc/cppopts.texi
===================================================================
RCS file: /cvs/gcc/gcc/doc/cppopts.texi,v
retrieving revision 1.1.101.1
retrieving revision 1.2
diff -p -u -r1.1.101.1 -r1.2
--- gcc/gcc/doc/cppopts.texi	21 Mar 2005 12:06:18 -0000	1.1.101.1
+++ gcc/gcc/doc/cppopts.texi	25 Mar 2005 19:29:22 -0000	1.2
@@ -167,6 +169,11 @@ in older programs.  This warning is on b
 Make all warnings into hard errors.  Source code which triggers warnings
 will be rejected.
 
+@item -Werror-maybe-reset
+@opindex Werror-maybe-reset
+Act like @samp{-Wno-error} if the @env{GCC_NO_WERROR} environment
+variable is set to anything other than 0 or empty.
+
 @item -Wsystem-headers
 @opindex Wsystem-headers
 Issue warnings for code in system headers.  These are normally unhelpful
Index: doc/invoke.texi
===================================================================
RCS file: /cvs/gcc/gcc/doc/invoke.texi,v
retrieving revision 1.1.101.5
retrieving revision 1.14
diff -p -u -r1.1.101.5 -r1.14
--- gcc/gcc/doc/invoke.texi	2005-04-22 06:49:59.000000000 +0000
+++ gcc/gcc/doc/invoke.texi	2007-01-07 00:51:08.000000000 +0000
@@ -214,7 +214,7 @@ in the following sections.
 -Wcast-align  -Wcast-qual  -Wchar-subscripts  -Wcomment @gol
 -Wconversion  -Wno-deprecated-declarations @gol
 -Wdisabled-optimization  -Wno-div-by-zero  -Wendif-labels @gol
--Werror  -Werror-implicit-function-declaration @gol
+-Werror -Werror-maybe-reset -Werror-implicit-function-declaration @gol
 -Wfloat-equal  -Wformat  -Wformat=2 @gol
 -Wno-format-extra-args -Wformat-nonliteral @gol
 -Wformat-security  -Wformat-y2k @gol
@@ -2989,6 +2989,22 @@ itself is likely to take inordinate amou
 @item -Werror
 @opindex Werror
 Make all warnings into errors.
+
+@item -Werror-maybe-reset
+@opindex Werror-maybe-reset
+Act like @samp{-Wno-error} if the @env{GCC_NO_WERROR} environment
+variable is set to anything other than 0 or empty.
+
+@item -fhonour-copts
+@opindex fhonour-copts
+If @env{GCC_HONOUR_COPTS} is set to 1, abort if this option is not
+given at least once, and warn if it is given more than once.
+If @env{GCC_HONOUR_COPTS} is set to 2, abort if this option is not
+given exactly once.
+If @env{GCC_HONOUR_COPTS} is set to 0 or unset, warn if this option
+is not given exactly once.
+The warning is quelled if @env{GCC_HONOUR_COPTS} is set to @samp{s}.
+This flag and environment variable only affect the C language.
 @end table
 
 @node Debugging Options
@@ -3878,7 +3894,7 @@ The default is @option{-fzero-initialize
 Perform the optimizations of loop strength reduction and
 elimination of iteration variables.
 
-Enabled at levels @option{-O2}, @option{-O3}, @option{-Os}.
+Enabled at levels @option{-O3}.
 
 @item -fthread-jumps
 @opindex fthread-jumps
@@ -4005,7 +4021,7 @@ safely dereference null pointers.  Use
 @option{-fno-delete-null-pointer-checks} to disable this optimization
 for programs which depend on that behavior.
 
-Enabled at levels @option{-O2}, @option{-O3}, @option{-Os}.
+Enabled at levels @option{-O3}.
 
 @item -fexpensive-optimizations
 @opindex fexpensive-optimizations
@@ -4249,7 +4265,7 @@ node, an alias set for the node.  Nodes 
 allowed to alias.  For an example, see the C front-end function
 @code{c_get_alias_set}.
 
-Enabled at levels @option{-O2}, @option{-O3}, @option{-Os}.
+Enabled at levels @option{-O3}.
 
 @item -falign-functions
 @itemx -falign-functions=@var{n}
Index: java/jvspec.c
===================================================================
RCS file: /cvs/gcc/gcc/java/jvspec.c,v
retrieving revision 1.1.101.1
retrieving revision 1.2
diff -p -u -r1.1.101.1 -r1.2
--- gcc/gcc/java/jvspec.c	21 Mar 2005 12:07:14 -0000	1.1.101.1
+++ gcc/gcc/java/jvspec.c	3 Feb 2006 15:51:21 -0000	1.2
@@ -609,6 +609,7 @@ lang_specific_pre_link (void)
      class name.  Append dummy `.c' that can be stripped by set_input so %b
      is correct.  */ 
   set_input (concat (main_class_name, "main.c", NULL));
+  putenv ("GCC_HONOUR_COPTS=s"); /* XXX hack!  */
   err = do_spec (jvgenmain_spec);
   if (err == 0)
     {
